package rules;

import com.ftn.carDiagnostic.model.symptoms.VisualSymptom;
import com.ftn.carDiagnostic.model.parts.ElectricalParts;
import com.ftn.carDiagnostic.model.parts.FluidParts;
import com.ftn.carDiagnostic.model.parts.MechanicalParts;
import com.ftn.carDiagnostic.model.parts.FuelInjectionParts;
import com.ftn.carDiagnostic.model.parts.AirFlowParts;
import com.ftn.carDiagnostic.model.symptoms.FeelingSymptom
import com.ftn.carDiagnostic.model.symptoms.AudioSymptom

//PRVA GRUPA PRAVILA, NA OSNOVU SIMPTOMA SE PRONALAZI PROBLEMATICAN DEO

//Visual symptoms

rule "Headlight not working symptom"
    when
        $vs: VisualSymptom( isHeadlightNotWorking() == true );
    then
    	delete($vs); //izbaci simptom iz baze znanja
       	ElectricalParts ep = new ElectricalParts(); ////pravi novi electrical parts problem gde je samo headlight true 
       	ep.setHeadlight(true);
       	insert(ep); //dodajemo novi problem
       	System.out.println("Uspeo da setujem da je problem u headlight"); //testni ispis
end 



rule "Taillight not working symptom"
    when
        $vs: VisualSymptom( isTaillightNotWorking() == true );
    then
   		delete($vs); //izbaci simptom iz baze znanja
   		ElectricalParts ep = new ElectricalParts();
       	ep.setTailLight(true); //pravi novi electrical parts problem gde je samo taillight true 
       	insert(ep);
       	System.out.println("Uspeo da setujem da je problem u taillight");
end 

rule "Electric windows not working"
    when
        $vs: VisualSymptom( isElectricWindowNotWorking() == true );
    then
    	ElectricalParts ep = new ElectricalParts();
       	ep.setElectricWindows(true); 
       	delete($vs);
       	insert(ep);
       	System.out.println("Uspeo da setujem da je problem u Electric windows");
end 

rule "battery, isEngineStartProblem problem"
    when
        $vs: VisualSymptom( isEngineStartProblem() == true );
    then
    	ElectricalParts ep = new ElectricalParts();
       	ep.setBattery(true); 
       	insert(ep);
       	delete($vs);
       	System.out.println("Uspeo da setujem da je problem u battery");
        //update($vs);
end 


rule "coolant dash light"
    when
        $vs: VisualSymptom( isCoolantDashLight() == true );
    then
    	FluidParts fp = new FluidParts();
       	fp.setCoolant(true);; //pravi novi electrical parts problem gde je samo taillight true 
       	fp.setLevel(0);
       	insert(fp);
    	delete($vs);
       	System.out.println("Uspeo da setujem da je problem u coolant");
end 

rule "oil dash light"
    when
        $vs: VisualSymptom( isOilDashLight() == true );
    then
    	delete($vs); //izbaci simptom iz baze znanja
    	FluidParts fp = new FluidParts();
       	fp.setOil(true);
       	fp.setLevel(0);
       	insert(fp);
       	System.out.println("Uspeo da setujem da je problem u oil");
end 

rule "steering fluid dash light"
    when
        $vs: VisualSymptom( isSteeringWheelDashLight() == true );
    then
    	delete($vs); //izbaci simptom iz baze znanja
    	FluidParts fp = new FluidParts();
       	fp.setPowerSteeringFluid(true);
       	fp.setLevel(0);
       	insert(fp);
       	//$vs.setHeadlightNotWorking(false);
       	System.out.println("Uspeo da setujem da je problem u steering fluid");
        //update($vs);
end 


rule "white smoke on exhaust, engine gasket fail"
    when
        $vs: VisualSymptom( isWhiteSmoke() == true );
    then
    	delete($vs); //izbaci simptom iz baze znanja
    	MechanicalParts mp = new MechanicalParts();
       	mp.setEngineGasket(true);
       	insert(mp);
       	//$vs.setHeadlightNotWorking(false);
       	System.out.println("Uspeo da setujem da je problem u engine gasket -> mechanic");
        //update($vs);
end 

rule "blue smoke on exhaust"
    when
        $vs: VisualSymptom( isBlueSmoke() == true );
    then
    	delete($vs); //izbaci simptom iz baze znanja
    	MechanicalParts mp = new MechanicalParts();
       	mp.setEngineGasket(true);
       	insert(mp);
       	//$vs.setHeadlightNotWorking(false);
       	System.out.println("Uspeo da setujem da je problem u engine oil consumption -> mechanic");
        //update($vs);
end


rule "black smoke on exhaust"
    when
        $vs: VisualSymptom( isBlackSmoke() == true );
    then
    	delete($vs); //izbaci simptom iz baze znanja
    	FuelInjectionParts fip = new FuelInjectionParts();
       	fip.setNozzle(true);
       	insert(fip);    	
       	//$vs.setHeadlightNotWorking(false);
       	System.out.println("Uspeo da setujem da je problem u nozzle");
        //update($vs);
end

rule "Brakepad dash light - Visual Symptom"
	when
		$vs: VisualSymptom( isBrakePadsDashLight() );
	then
		delete($vs);
		MechanicalParts mp = new MechanicalParts();
		mp.setBrakePads(true);
		insert(mp);
		System.out.println("Mechanical part problem - SET");
end

rule "Air condition not working"
	when
		$vs: VisualSymptom( isAirConditionNotWorking() );
	then
		delete($vs);
		FluidParts fp = new FluidParts();
		fp.setFreon(true);
		fp.setLevel(0);
		insert(fp);
		System.out.println("Fluid problem - SET");
end

rule "DPF dash light On"
	when
		$vs: VisualSymptom( isDpfDashLight() );
	then
		delete($vs);
		AirFlowParts ap = new AirFlowParts();
		ap.setDieselParticulateFilter(true);
		insert(ap);
		System.out.println("Airflow part problem - SET");
end



// Feels like symptoms
rule "Vehicle rides uncomforbaly"
	when
		$fs: FeelingSymptom( isRidesUncomfortable() );
	then
		delete($fs);
		MechanicalParts mp = new MechanicalParts();
		mp.setShockAbsorber(true);
		insert(mp);
		System.out.println("Mechanical part shockabsorber problem - SET");
end

// Audio symptom
rule "Grinding symptom"
	when
		$as: AudioSymptom (isGrinding());
	then
		delete($as);
		MechanicalParts mp = new MechanicalParts();
		mp.setBrakeDisc(true);
		insert(mp);
		System.out.println("Brake Disc Problem - SET");
end

rule "Knocking symptom"
	when
		$as: AudioSymptom (isKnocking());
	then
		delete($as);
		FuelInjectionParts fip = new FuelInjectionParts();
		fip.setNozzle(true);
		insert(fip);
		System.out.println("Nozzle Problem - SET");
end

rule "Whistling symptom"
	when
		$as: AudioSymptom (isWhistling());
	then
		delete($as);
		AirFlowParts ap = new AirFlowParts();
		ap.setTurboCharger(true);
		insert(ap);
		System.out.println("Turbo charger problem - SET");
end

rule "Ticking symptom"
	when
		$as: AudioSymptom (isTicking());
	then
		delete($as);
		MechanicalParts mp = new MechanicalParts();
		mp.setStabilizer(true);
		insert(mp);
		System.out.println("Stabilizer Problem - SET");
end



